-- DDL for Financial Control App
-- Creates 'periods' and 'transactions' tables, along with a custom 'category' type.

-- Step 1: Create a custom ENUM type for transaction categories.
-- This provides better data integrity than using a simple 'text' field.
CREATE TYPE public.transaction_category AS ENUM (
  'groceries',
  'transport',
  'entertainment',
  'utilities',
  'health',
  'education',
  'other'
);

-- Step 2: Create the 'periods' table.
-- Each period represents a time frame (e.g., a month) with a budget goal.
CREATE TABLE public.periods (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  name text NOT NULL,
  start_date date NOT NULL,
  end_date date NOT NULL,
  budget_goal numeric(10, 2) DEFAULT 0.00 NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL
);

-- Add a comment to describe the table
COMMENT ON TABLE public.periods IS 'Represents a budget period, like a specific month.';

-- Step 3: Create the 'transactions' table.
-- Each transaction belongs to a period and has a category.
CREATE TABLE public.transactions (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  period_id bigint REFERENCES public.periods(id) ON DELETE CASCADE NOT NULL,
  description text,
  amount numeric(10, 2) NOT NULL,
  category public.transaction_category NOT NULL, -- Using our custom ENUM type
  transaction_date timestamptz DEFAULT now() NOT NULL
);

-- Add a comment to describe the table
COMMENT ON TABLE public.transactions IS 'Stores individual financial transactions.';

-- Step 4: Enable Row Level Security (RLS) for both tables.
-- This is a critical security step. No one can access data until you create policies.
ALTER TABLE public.periods ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.transactions ENABLE ROW LEVEL SECURITY;